- classes = []
- classes << 'visible' if !@filter.errors.empty? || params[:show]
- content = @filter.content || {}
- content[:services] ||= []
- content[:services] = content[:services].map{|service| service =~ /^\d+$/ ? service.to_i : nil}.compact
- slice_size = 4

.filter_container.nine.columns.centered#Filter{data: {filter: 'data-filter'}, class: classes}
  = form_for @filter, url: projects_path, method: :get, remote: true do |f|
    - if @filter.errors.any?
      .row
        .twelve.columns#error_explanation
          %h2= "#{pluralize(@filter.errors.count, "error")} prohibited this filter from being saved:"
          %ul
            - @filter.errors.full_messages.each do |msg|
              %li= msg
  
    .row.section
      = f.hidden_field :id
      = f.hidden_field :area
      .twelve.columns
        = f.label :name
        = f.text_field :name
    
    .row.section
      - Service.active.each_slice(slice_size) do |services|
        .row
          - services.each_with_index do |service, i|
            - classes = 'end' if services.length < slice_size && i == services.length-1
            .three.columns.services{class: classes}<
              = check_box_tag 'filter[content][services][]', service.id, content[:services].include?(service.id), id: "filter_content_services_#{service.id}"
              = label_tag "filter_content_services_#{service.id}", service.abbreviation

    .row
      .four.columns.offset-by-eight.text-right.actions
        = submit_tag 'Apply', name: :apply
        - if @filter.new_record?
          \|
          = submit_tag 'Save'
        - else
          \|
          = submit_tag 'Update'
          \|
          = link_to 'Delete', projects_path(destroy: true), method: :delete, data: { confirm: "#{t(:warning_html, scope: :filter)}" }, remote: true
        \|
        = link_to 'Close', '#', data: {filter_close: true}
