- remote = false if remote.nil?
- stand_alone = true if stand_alone.nil?
- task ||= @task

%div{class: stand_alone ? 'task edit-mode' : nil}
  = form_for task, remote:remote do |f|
    = f.hidden_field :points
    .row-fluid
      .span12
        .clearfix{class: task.status}
          
          - if task.errors.any?
            .row-fluid
              .span12
                #error_explanation
                  %h2= "#{pluralize(task.errors.count, "error")} prohibited this task from being saved:"
                  %ul
                    - task.errors.full_messages.each do |msg|
                      %li= msg

          .row-fluid.section
            .controls.controls-row
              .span9
                = f.label :title
                = f.text_field :title, placeholder: 'Enter task title', class: 'span12'
              .span3
                = f.label :status
                = f.select :status, Task::ALL_STATES.map{|t| [I18n.t(t, scope: [:activerecord, :labels, :task]), t]}, {}, {data: {status_select: true}, class: 'span12'}

          .row-fluid.section
            .controls.controls-row
              .span9
                = f.label :story_id
                = f.select :story_id, Story.all_stories, {}, class: 'span12'
              .span3.start_date{style: "display:#{task.in_progress? ? 'inline-block' : 'none'}"}
                = f.label :start_date
                = f.text_field :start_date, data: {datefield: true}, class: 'span12'
              .span3.completed_date{style: "display:#{task.completed? ? 'inline-block' : 'none'}"}
                = f.label :completed_date
                = f.text_field :completed_date, data: {datefield: true}, class: 'span12'

          .row-fluid.section
            .span12
              = f.label :description, t(:description, scope: [:activerecord, :attributes, :task])
              = f.text_area :description, rows: 5, placeholder: 'Provide a description or details', class: 'span12'

          .row-fluid
            .span3
              = f.label :project_id, t(:project, scope: [:activerecord, :attributes, :task])
              = f.select :project_id, Project.in_name_order.all.collect {|p| [ p.name, p.id ] }, {}, class: 'span12'
            .span3.offset2
              = f.label :points, t(:points, scope: [:activerecord, :attributes, :task])
              = render partial: 'points', locals: {task: task, editable: true}

          .row-fluid
            .span6.offset6.text-right
              = f.submit 'Save', class: 'btn btn-small btn-flat btn-primary'
              - unless task.new_record?
                \|
                = link_to 'Delete', task, method: :delete, class: 'btn btn-small btn-flat btn-danger', data: { confirm: "WARNING: Are you sure you want to delete this task?" }, remote:remote
              \|
              = link_to 'Cancel', task.new_record? ? tasks_path : task_path(task), class: 'btn btn-small btn-link', remote:remote
          = render template: 'shared/bind_dates'
