- remote = false if remote.nil?
- task ||= @task

.row.task_edit
  .twelve.columns
    = form_for task, remote:remote do |f|
      - if task.errors.any?
        .row
          .twelve.columns#error_explanation
            %h2= "#{pluralize(task.errors.count, "error")} prohibited this task from being saved:"
            %ul
              - task.errors.full_messages.each do |msg|
                %li= msg

      .row
        = f.hidden_field :points
        .seven.columns
          = f.label :title
          = f.text_field :title
        .three.columns.offset_by_two
          = f.label :status
          = f.select :status, Task::LEGAL_STATES.map{|t| [I18n.t(t, scope: [:activerecord, :labels, :task]), t]}, {}, {data: {status_select: true}}
      .row
        .seven.columns
          = f.label :story_id
          = f.select :story_id, Story.all_stories
      .row
        .twelve.columns
          = f.label :description, t(:description, scope: [:activerecord, :attributes, :task])
          = f.text_area :description
      .row
        .two.columns<
          = f.label :project_id, t(:project, scope: [:activerecord, :attributes, :task])
          = f.select :project_id, Project.in_name_order.all.collect {|p| [ p.name, p.id ] }
        .three.columns{style: 'line-height:16px'}<
          - if task.story.present? && !task.new_record?
            = f.label :story_id, t(:service, scope: [:activerecord, :attributes, :task])
            = task.story.service.abbreviation
        .three.columns
          = f.label :points, t(:points, scope: [:activerecord, :attributes, :task])
          %span.points<
            .overlay{class: points_to_class(task.points)}<
              - ((Task::POINTS_MINIMUM+1)..Task::POINTS_MAXIMUM).each do |points|
                %i.small.glyphicon{class: 'star', data: {points:points}}
            - ((Task::POINTS_MINIMUM+1)..Task::POINTS_MAXIMUM).each do |points|
              %i.small.glyphicon{class: 'dislikes', data: {points:points}}
        .three.columns.end.start_date{style: "display:#{task.in_progress? ? 'inline-block' : 'none'}"}
          = f.label :start_date
          = f.text_field :start_date, data: {datefield: true}
        .three.columns.end.completed_date{style: "display:#{task.completed? ? 'inline-block' : 'none'}"}
          = f.label :completed_date
          = f.text_field :completed_date, data: {datefield: true}
      .row
        .four.columns.offset-by-eight.text-right.actions
          = f.submit 'Save'
          - unless task.new_record?
            \|
            = link_to 'Delete', task, method: :delete, data: { confirm: "WARNING: Are you sure you want to delete this task?" }, remote:remote
          \|
          = link_to 'Cancel', task.new_record? ? tasks_path : task_path(task), remote:remote
          = render template: 'shared/bind_dates'
