- remote = false if remote.nil?
- task ||= @task

= form_for task, remote:remote do |f|
  - if task.errors.any?
    .row
      .span8#error_explanation
        %h2= "#{pluralize(task.errors.count, "error")} prohibited this task from being saved:"
        %ul
          - task.errors.full_messages.each do |msg|
            %li= msg

  .row
    = f.hidden_field :points
    .span7
      = f.label :title
      = f.text_field :title, placeholder: 'Enter task title', class: 'span7'
  .row
    .span5
      = f.label :story_id
      = f.select :story_id, Story.all_stories, {}, class: 'span5'
    .span2
      = f.label :status
      = f.select :status, Task::ALL_STATES.map{|t| [I18n.t(t, scope: [:activerecord, :labels, :task]), t]}, {}, {class: 'span2', data: {status_select: true}}
  .row
    .span7
      = f.label :description, t(:description, scope: [:activerecord, :attributes, :task])
      = f.text_area :description, class: 'span7'
  .row
    .span2<
      = f.label :project_id, t(:project, scope: [:activerecord, :attributes, :task])
      = f.select :project_id, Project.in_name_order.all.collect {|p| [ p.name, p.id ] }, {}, class: 'span2'
    .span2{style: 'line-height:16px'}<
      - if task.story.present? && !task.new_record?
        = f.label :story_id, t(:feature, scope: [:activerecord, :attributes, :task])
        = task.story.feature.name
    .span1
      = f.label :points, t(:points, scope: [:activerecord, :attributes, :task])
      %span.points<
        .overlay{class: points_to_class(task.points)}<
          - Task::POINTS_MAXIMUM.downto(Task::POINTS_MINIMUM+1) do |points|
            %i.small.glyphicon{class: 'star', data: {points:points}}
        - Task::POINTS_MAXIMUM.downto(Task::POINTS_MINIMUM+1) do |points|
          %span.small.glyphicon{data: {points:points}}
            %i.small.glyphicon{class: 'dislikes'}
    .span2.start_date{style: "display:#{task.in_progress? ? 'inline-block' : 'none'}"}
      = f.label :start_date
      = f.text_field :start_date, data: {datefield: true}, class: 'span2'
    .span2.completed_date{style: "display:#{task.completed? ? 'inline-block' : 'none'}"}
      = f.label :completed_date
      = f.text_field :completed_date, data: {datefield: true}, class: 'span2'
  .row
    .span3.offset4.text-right.actions
      = f.submit 'Save', class: 'btn btn-small btn-primary'
      - unless task.new_record?
        \|
        = link_to 'Delete', task, method: :delete, class: 'btn btn-small btn-danger', data: { confirm: "WARNING: Are you sure you want to delete this task?" }, remote:remote
      \|
      = link_to 'Cancel', task.new_record? ? tasks_path : task_path(task), class: 'btn btn-small btn-link', remote:remote
      = render template: 'shared/bind_dates'
