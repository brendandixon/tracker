- group_by_iteration = @tasks.is_a?(IterationEnumerator)
- states = @filter.content[:status] || []
- states = StatusScopes::ALL_STATES if states.empty?

- if false && (tasks.peek rescue nil).blank?
  .eleven.columns.centered#Main
    %h3.subheader= t(:none_html, scope: [:controllers, :tasks])
- else
  .nine.columns.centered#Main
    - unless group_by_iteration
      .task_sort.twelve
        %table.twelve
          %thead
            %tr
              = render partial: 'shared/sortable', locals: {name: 'Title', field: 'title', classes: 'three'}
              = render partial: 'shared/sortable', locals: {name: 'Rank', field: 'rank', classes: 'three'}
              = render partial: 'shared/sortable', locals: {name: 'Points', field: 'point', classes: 'three'}
              = render partial: 'shared/sortable', locals: {name: 'Status', field: 'status', classes: 'three'}
    .twelve
      %ol.task_list#TaskList<
        - if group_by_iteration
          - @tasks.each_iteration(@filter.content[:iteration]) do |iteration|
            %li.iteration_marker{data: {iteration: iteration.number, collapsed: 0}}
              .row
                .three.columns= iteration.end_date.to_formatted_s(:medium)
                .two.offset-by-two.columns= "#{iteration.points} Points"
                .two.columns.iteration_toggle
                  .glyphicon.collapse_top
            - tasks = iteration.tasks.find_all{|task| states.include?(task.status)}
            = render partial: 'task', collection: tasks, locals: {in_edit_mode: @in_edit_mode, iteration: iteration.number}

        - else
          = render partial: 'task', collection: @tasks, locals: {in_edit_mode: @in_edit_mode}
    = render template: 'shared/bind_list'
