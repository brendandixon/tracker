- ranked = params.has_key?('ranked')
.nine.columns.centered#Main
  - if @tasks.is_a?(IterationEnumerator)
    .twelve
      %ol.task_list#TaskList<
        - projects = @filter.content[:projects] || @tasks.team.projects.map{|p| p.id}
        - states = @filter.content[:status] || []
        - states = StatusScopes::ALL_STATES if states.empty?
        - @tasks.each_iteration(-1) do |iteration|
          %li.iteration_marker{data: {iteration: iteration.number, collapsed: 0}}
            .row
              .three.columns= iteration.end_date.to_formatted_s(:medium)
              .four.offset-by-two.columns= "#{iteration.points} Points (#{iteration.completed} completed)"
              .two.columns.iteration_toggle
                .glyphicon.collapse_top
          - tasks = iteration.tasks.find_all{|task| states.include?(task.status) && projects.include?(task.project.id)}
          - if tasks.count > 0
            = render partial: 'task', collection: tasks, locals: {in_edit_mode: @in_edit_mode, iteration: iteration.number, ranked: ranked}
          - else
            %li{data: {iteration: iteration.number, collapsed: 0}}
              %h3.subheader= t(:none_html, scope: [:controllers, :tasks])
      %div
        :javascript
          $(function() {$('body').trigger('iteration.visibility');});
  - else
    - if @tasks.count > 0
      .task_sort.twelve
        %table.twelve
          %thead
            %tr
              = render partial: 'shared/sortable', locals: {name: 'Title', field: 'title', classes: 'four'}
              = render partial: 'shared/sortable', locals: {name: 'Points', field: 'point', classes: 'four'}
              = render partial: 'shared/sortable', locals: {name: 'Status', field: 'status', classes: 'four'}
      .twelve
        %ol.task_list#TaskList<
          / Use Iteration 0 to enable printing - for now
          = render partial: 'task', collection: @tasks, locals: {in_edit_mode: @in_edit_mode, iteration: 0, ranked: ranked}
    - else
      %h3.subheader= t(:none_html, scope: [:controllers, :tasks])
  = render template: 'shared/bind_list'
